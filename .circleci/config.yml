version: 2.1

defaults: &defaults
  parameters: &default_parameters
    restore_cache_key_1:
      type: string
      default: 'spree-bundle-v10-ruby-{{ checksum ".ruby-version" }}-{{ .Branch }}'
    restore_cache_key_2:
      type: string
      default: 'spree-bundle-v10-ruby-{{ checksum ".ruby-version" }}'
    save_cache_key:
      type: string
      default: 'spree-bundle-v10-ruby-{{ checksum ".ruby-version" }}-{{ .Branch }}'
    run_file_path:
      type: string
    rails_version:
      type: string
      default: '~> 7.2.0'
    store_artefacts:
      type: boolean
      default: false
  environment: &environment
    CIRCLE_TEST_REPORTS: /tmp/test-results
    CIRCLE_ARTIFACTS: /tmp/test-artifacts
    BUNDLE_JOBS: 4
    BUNDLE_RETRY: 3
    BUNDLE_PATH: ~/spree/vendor/bundle
    RAILS_VERSION: << parameters.rails_version >>
    DB: postgres # default value, this will speed up bundle install for all postgres builds
    DB_HOST: localhost
    DB_USERNAME: postgres
    
  working_directory: ~/spree
  docker:
    - image: &ruby_image cimg/ruby:3.3.0-browsers

jobs:
  run_test: &run_test
    <<: *defaults
    steps: &default_steps
      - checkout
      - attach_workspace:
          at: /tmp
      - restore_cache:
          keys:
            - << parameters.restore_cache_key_1 >>
            - << parameters.restore_cache_key_2 >>
      - run:
          name: Allow executing given file
          command: chmod +x << parameters.run_file_path >>
      - run:
          name: Run << parameters.run_file_path >> file
          command: bash << parameters.run_file_path >>
      - when:
          condition: << parameters.save_cache_key >>
          steps:
            - save_cache:
                key: << parameters.save_cache_key >>
                paths:
                  - ~/spree/vendor/bundle
      - when:
          condition: <<  parameters.store_artefacts >>
          steps:
            - store_artifacts:
                path: /tmp/test-artifacts
                destination: test-artifacts
            - store_artifacts:
                path: /tmp/failed_tests
                destination: failed_tests
            - store_artifacts:
                path: /tmp/test-results
                destination: raw-test-output
            - store_test_results:
                path: /tmp/test-results

  tests_core:
    <<: *run_test
    docker:
      - image: *ruby_image
      - image: cimg/postgres:16.2
        environment:
          POSTGRES_USER: postgres
    parallelism: 6
    environment:
      <<: *environment
      PROJECTS: core

  tests_api:
    <<: *run_test
    parallelism: 4
    docker:
      - image: *ruby_image
      - image: cimg/postgres:16.2
        environment:
          POSTGRES_USER: postgres
    environment:
      <<: *environment
      PROJECTS: api

  tests_admin:
    <<: *run_test
    docker:
      - image: *ruby_image
      - image: cimg/postgres:16.2
        environment:
          POSTGRES_USER: postgres
    environment:
      <<: *environment
      PROJECTS: admin

  tests_storefront:
    <<: *run_test
    docker:
      - image: *ruby_image
      - image: cimg/postgres:16.2
        environment:
          POSTGRES_USER: postgres
    environment:
      <<: *environment
      PROJECTS: storefront

  tests_other:
    <<: *run_test
    docker:
      - image: *ruby_image
      - image: cimg/postgres:16.2
        environment:
          POSTGRES_USER: postgres
    environment:
      <<: *environment
      PROJECTS: emails,sample

  # tests_mysql:
  #   <<: *run_test
  #   parallelism: 12
  #   parameters:
  #     <<: *default_parameters
  #   environment:
  #     <<: *environment_mysql
  #   docker:
  #     - image: *ruby_image
  #     - image: cimg/mysql:8.0
  #       command: [--default-authentication-plugin=mysql_native_password]

workflows:
  main:
    jobs:
      - run_test:
          name: build
          run_file_path: ./bin/bundle_ruby.sh
      - tests_core:
          name: tests_rails_postgres_core
          store_artefacts: true
          run_file_path: ./bin/tests_database_ci.sh
          requires:
            - build
      - tests_api:
          name: tests_rails_postgres_api
          store_artefacts: true
          run_file_path: ./bin/tests_database_ci.sh
          requires:
            - build
      - tests_admin:
          name: tests_rails_postgres_admin
          store_artefacts: true
          run_file_path: ./bin/tests_database_ci.sh
          requires:
            - build
      - tests_storefront:
          name: tests_rails_postgres_storefront
          store_artefacts: true
          run_file_path: ./bin/tests_database_ci.sh
          requires:
            - build
      - tests_other:
          name: tests_rails_postgres_other
          store_artefacts: true
          run_file_path: ./bin/tests_database_ci.sh
          requires:
            - build
      - run_test:
          name: brakeman
          restore_cache_key_1: spree-brakeman-{{ .Branch }}
          restore_cache_key_2: spree-brakeman
          save_cache_key: spree-brakeman-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          run_file_path: ./bin/brakeman.sh
          requires:
            - build
            - tests_rails_postgres_core
            - tests_rails_postgres_api
            - tests_rails_postgres_admin
            - tests_rails_postgres_storefront
            - tests_rails_postgres_other
